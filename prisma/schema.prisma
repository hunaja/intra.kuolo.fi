generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MemberClassYear {
  LT1
  LT2
  LT3
  LT4
  LT5
  LT6
  LTn
  alumni
}

enum CourseClassYear {
  LT1
  LT2
  LT3
  LT4
  LT5
  LT6
}

model Member {
  id                  String   @id @default(cuid())
  fullName            String
  classYear           MemberClassYear
  email               String   @unique
  phone               String?
  hiddenFromList      Boolean  @default(false)
  phoneHiddenFromList Boolean  @default(true)
  admin               Boolean  @default(false)

  invitation          MemberInvitation?
  addedExams          Exam[]
}

model Guest {
  id         String   @id @default(cuid())
  fullName   String
  email      String   @unique
  advertiser Boolean @default(false)
}

model Course {
  id        String   @id @default(cuid())
  name      String
  code      String?
  classYear CourseClassYear
  visible   Boolean  @default(false)

  exams     Exam[]

  @@unique([name, classYear])
}

model Exam {
  id             String   @id @default(cuid())
  name           String
  courseId       String
  hiddenFromList Boolean  @default(false)
  year           Int?
  fileSize       Int
  fileName       String?
  fileMimeType   String
  submitterId    String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  course       Course   @relation(fields: [courseId], references: [id])
  submitter    Member?  @relation(fields: [submitterId], references: [id], onDelete: SetNull)
}

 
model Account {
  email      String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MemberInvitation {
  id        String   @id @default(cuid())
  memberId  String  @unique
  token     String   @unique
  createdAt DateTime @default(now())

  member    Member @relation(fields: [memberId], references: [id], onDelete: Cascade)

  @@unique([memberId, token])
}

model OzgarYear {
  id        String   @id @default(cuid())
  year      Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  videos    OzgarVideo[]
}

model OzgarVideo {
  id        String   @id @default(cuid())
  title     String
  yearId    String
  videoId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  year      OzgarYear @relation(fields: [yearId], references: [id])
}
